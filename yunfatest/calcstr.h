
#include<stdio.h> /*库文件包含*/
#include<string.h> /*用于字符串操作*/
#include<stdlib.h> /*用于exit函数*/

#ifndef CALC_STR_1
#define CALC_STR_1
void VS_StrTrim(char*pStr);
/**************************************************************************
int check(char *c)
输入参数：
 char *c: 输入的字符串
返回参数：
 0：字符串中有不符合规定的字符
 1: 字符串字符符合规定，没有不符合规定的字符.
功能：
 检查字符串中有否除了 0-9, +,-,*,/,(,),之外的其他字符，
 如果有，则返回0, 表示出现错误。
 若没有，则返回1,表式字符串符合规定。
**************************************************************************/
int check(char *c);

/**************************************************************************
void  move(char *f, double *s,int p) 
 
输入参数：
 char *f : 运算符数组
 double *s: 数值数组
 int p:  当前运算符数组位置。
返回参数:
 无
功能：
 将当前已经完成运算的运算符消去，同时将数值数组的位置调整以进行下一次运算。
 传入值p若为3
 则当前符号的数组位置为3.
 f[3]=f[3+1].......f[len-2]=f[len-1]  f[len-1]='\0';
 s[i]=s[i+1].......s[len-1]=s[len]  因为数值比运算符多一个。
***************************************************************************/

void  move(char *f, double *s, int p);
/**************************************************************************
double convnum(char *c)
输入参数：
 char *c :由数字和小数点组成的字符，用以转换成double型的数值。
返回参数：
 num:返回转换好的值。
功能：
 将输入的字符串先将其小数点以前的部分复制到temp[]数组中，
 若有小数点，则将小数点之后的数值，也就是小数部分先进行计算,值存入num中
 计算完成后，再对整数部分进行计算，值加上小数部分的值，存入num中。
***************************************************************************/
double convnum(char *c);

/**************************************************************************
double good(char *c)
输入参数：
 char *c :即将进行运算的字符串型数学表达式。如3.5+(2*3/5)
返回参数：
 s[0]:计算结果将放入s[0]中
功能：
 将输入的字符串中的数字分别调用convnum(char *c)函数进行数值变换，再将其依
 次存入doulbe s[i]中，将加减乘除运算符依次存入字符串符号数组 char f[i]中，
 然后如果遇到括号，则将括号内的字符串存入另一字符数组中，然后用此
 good(char *c) 递归函数进行递归运算。 然后根据先乘除，后加减的顺序对已
 存入数组的数值根 据存入字符串符号数组的运算符进行运算。结果存入s[0]中。
 返回最终结果。
***************************************************************************/
double good(char *c);


void test_caclstr();


#endif